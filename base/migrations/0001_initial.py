# Generated by Django 4.1.2 on 2022-12-12 18:27

import base.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Anfitrião',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(max_length=60, verbose_name='Nome Completo')),
                ('data_nascimento', models.DateField(verbose_name='Data de nascimento')),
                ('rg', models.IntegerField(blank=True, max_length=7, null=True, verbose_name='Número do RG')),
                ('cpf', models.IntegerField(blank=True, max_length=11, null=True, verbose_name='Número do CPF')),
                ('data_casamento', models.DateField(null=True, verbose_name='Data de casamento')),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino')], default='M', max_length=1, verbose_name='Sexo')),
                ('nome_pai', models.CharField(max_length=60, verbose_name='Nome do Pai')),
                ('nome_mãe', models.CharField(max_length=60, verbose_name='Nome da Mãe')),
                ('naturalidade', models.CharField(max_length=60, verbose_name='Cidade de origem')),
                ('estado_civil', models.CharField(choices=[('S', 'Solteiro/a'), ('C', 'Casado/a'), ('V', 'Viúvo/a'), ('S', 'Separado/a'), ('O', 'Outros')], default='C', max_length=17, verbose_name='Estado civil')),
                ('escolaridade', models.CharField(choices=[('F', 'Fundamental'), ('M', 'Médio'), ('SI', 'Superior Inc.'), ('SC', 'Superior Completo'), ('S', 'Sem escolaridade')], default='F', max_length=17, verbose_name='Escolaridade')),
                ('telefone', models.IntegerField(null=True, verbose_name='Celular ou Telefone')),
                ('profissao', models.CharField(max_length=60, verbose_name='Profissão')),
                ('n_carteira_trabalho', models.IntegerField(blank=True, null=True, verbose_name='Nº Carteira de Trabalho')),
                ('situacao_atual', models.CharField(choices=[('T', 'Trabalhando'), ('D', 'Desempregado'), ('Af', 'Afastado'), ('Ap', 'Aposentado'), ('P', 'Pensionista'), ('O', 'Outros')], default='T', max_length=17, verbose_name='Situação atual')),
                ('religiao', models.CharField(choices=[('C', 'Católico'), ('E', 'Evangélico'), ('O', 'Outra')], default='C', max_length=17, verbose_name='Religião')),
                ('praticante', models.CharField(choices=[('S', 'Sim'), ('N', 'Não'), ('A', 'As vezes')], default='S', max_length=17, verbose_name='Praticante')),
                ('filhos', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], default='S', max_length=17, verbose_name='Possui filhos')),
                ('n_filhos', models.CharField(blank=True, max_length=17, null=True, verbose_name='Se possuir filhos, informar o Nº')),
                ('filhos_residencia', models.CharField(blank=True, max_length=17, null=True, verbose_name='Se possuir filhos, informar quantos moram junto')),
                ('filhos_menor_quartorze_anos', models.CharField(blank=True, max_length=17, null=True, verbose_name='Se possuir filhos, informar se possui filhos menores de 14 anos')),
                ('alguem_impossibilitado', models.CharField(choices=[('D', 'Doente'), ('DF', 'Def. Físico'), ('N', 'Não')], default='D', max_length=17, verbose_name='Na família tem alguém:')),
                ('tipo_doenca', models.CharField(blank=True, max_length=17, null=True, verbose_name='Se tiver alguém doente, informar o tipo de doença')),
                ('tipo_deficiencia', models.CharField(blank=True, max_length=17, null=True, verbose_name='Se tiver alguém deficiente, informar o tipo da deficiência')),
                ('alguem_posto_saude', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], default='S', max_length=17, verbose_name='Alguém frequenta posto de saúde?')),
                ('posto_bairro', models.CharField(blank=True, max_length=17, null=True, verbose_name='Se alguém frequentar o posto, informar o posto e o bairro')),
                ('alguem_beneficio_auxilio', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], default='S', max_length=17, verbose_name='Alguém recebe algum benefício/auxílio do governo?')),
                ('beneficio_auxilio', models.CharField(blank=True, max_length=17, null=True, verbose_name='Se alguém receber algum auxilio/beneficio do governo, informar-lo')),
                ('n_pessoas_familia', models.CharField(blank=True, max_length=17, null=True, verbose_name='Quantas pessoas possuem na família (contando com o anfitrião).')),
                ('tipo_residencia', models.CharField(choices=[('P', 'Própria'), ('A', 'Alugada'), ('M', 'Moro com Parentes'), ('O', 'Outro')], default='A', max_length=17, verbose_name='Tipo de Residência')),
                ('endereco', models.CharField(max_length=100, null=True, verbose_name='Av/Rua do endereço')),
                ('n_endereco', models.CharField(max_length=30, null=True, verbose_name='Nº do endereço')),
                ('comp_endereco', models.CharField(max_length=50, null=True, verbose_name='Se tiver complemento do endereço')),
                ('bairro', models.CharField(max_length=70, null=True, verbose_name='Bairro')),
                ('cidade', models.CharField(max_length=70, null=True, verbose_name='Cidade')),
                ('estado', models.CharField(max_length=70, null=True, verbose_name='Estado')),
            ],
            options={
                'ordering': ['nome_completo'],
            },
        ),
        migrations.CreateModel(
            name='Morador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(max_length=60, verbose_name='Nome Completo')),
                ('documento', models.CharField(choices=[('RG', 'Registro Geral'), ('CPF', 'Cadastro de Pessoa Física')], max_length=10, verbose_name='Tipo de documento')),
                ('n_documento', models.IntegerField(max_length=11, verbose_name='Número do documento')),
                ('data_nascimento', models.DateField(verbose_name='Data de nascimento')),
                ('trabalhando', models.CharField(choices=[('Sim', 'Trabalha'), ('Não', 'Não Trabalha')], max_length=20, verbose_name='Sim ou Não')),
                ('estudando', models.CharField(choices=[('Sim', 'Estuda'), ('Não', 'Não Estuda')], max_length=10, verbose_name='Tipo de documento')),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino')], max_length=10, verbose_name='Sexo')),
                ('grau_parentesco', models.CharField(choices=[('Esposo/a', 'Esposo/a'), ('Filho/a', 'Filho/a'), ('Irmão/ã', 'Filho/ã'), ('Avô/ó', 'Avô/ó'), ('Sobrinho/a', 'Sobrinho/a'), ('Neto/a', 'Neto/a'), ('Tio/a', 'Tio/a'), ('Primo/a', 'Primo/a'), ('Genro/Nora', 'Genro/Nora'), ('Outros', 'Outros')], max_length=10, verbose_name='Tipo de documento')),
                ('anfitriao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moradores', to='base.anfitrião')),
            ],
            options={
                'verbose_name_plural': 'Moradores',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', base.models.UserManager()),
            ],
        ),
    ]
